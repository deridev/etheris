use std::time::Duration;

use etheris_discord::twilight_model::channel::message::component::ButtonStyle;
use etheris_framework::watcher::WatcherOptions;
use rand::{rngs::StdRng, Rng, SeedableRng};

use crate::prelude::*;

#[rustfmt::skip]
#[command("Evolua seu personagem atrav√©s do esfor√ßo f√≠sico")]
#[name("treinar")]
#[character_required(true)]
pub async fn train(mut ctx: CommandContext) -> anyhow::Result<()> {
    let author = ctx.author().await?;
    verify_user_cooldown!(ctx, author, "TRAIN");
    
    let character = parse_user_character!(ctx, author);
    if character.action_points == 0 {
        ctx.reply(
            Response::new_user_reply(
                &author,
                "voc√™ n√£o tem nenhum ponto de a√ß√£o para treinar! Use **/perfil** para ver quando seus pontos de a√ß√µes recarregam."
            )
            .set_ephemeral(),
        )
        .await?;
        return Ok(());
    }

    verify_user_cooldown!(ctx, author, "TRAIN");
    ctx.db()
        .cooldowns()
        .create_cooldown(author.id, "TRAIN", chrono::Duration::minutes(3))
        .await?;

    let buttons = vec![
        ButtonBuilder::new().set_custom_id("strength").set_label("For√ßa").set_emoji(Emoji::from_unicode("üí™")),
        ButtonBuilder::new().set_custom_id("health").set_label("Vida").set_emoji(emojis::VITALITY),
    ];
    let row = ActionRowBuilder::new().add_buttons(buttons.clone());

    let message = ctx.send(Response::new_user_reply(&author, "escolha o que voc√™ quer treinar ao custo de **1 ponto de a√ß√£o**:").set_components(vec![row]).add_emoji_prefix("üèãÔ∏è")).await?;

    let Ok(Some(collected)) = ctx.watcher.await_single_component(message.id, move |interaction| interaction.author_id() == Some(author.id), WatcherOptions {
        timeout: Duration::from_secs(60)
    }).await else {
        return Ok(());
    };

    let data = collected.parse_message_component_data()?;

    let buttons = buttons.into_iter().map(|b| {
        let custom_id = b.data.custom_id.clone().unwrap_or_default();
        b.set_disabled(true).set_style(if custom_id == data.custom_id { ButtonStyle::Success } else { ButtonStyle::Secondary })
    }).collect::<Vec<_>>();

    let row = ActionRowBuilder::new().add_buttons(buttons);

    let mut interaction_ctx = CommandContext::from_with_interaction(&ctx, collected.into());
    interaction_ctx.update_message(Response::default().set_components(vec![row])).await?;

    // The actual training
    let mut character = parse_user_character!(ctx, author);
    if character.action_points == 0 {
        return Ok(());
    }

    character.action_points -= 1;

    match data.custom_id.as_str() {
        "strength" => {
            strength_training(ctx, character).await?;
        },
        "health" => {
            health_training(ctx, character).await?;
        }
        _ => return Ok(())
    }

    Ok(())
}

fn random_xp_amount(level: u32) -> u32 {
    match level {
        0..=3 => StdRng::from_entropy().gen_range(50..=70),
        4..=10 => StdRng::from_entropy().gen_range(20..=45),
        _ => StdRng::from_entropy().gen_range(10..=30),
    }
}

const XP_REQUIRED_TO_LEVELUP: u32 = 100;

pub async fn strength_training(
    mut ctx: CommandContext,
    mut character: CharacterModel,
) -> anyhow::Result<()> {
    let author = ctx.author().await?;
    let xp = random_xp_amount(character.stats.strength_level);
    character.strength_xp += xp;

    let levels_upgraded = character.strength_xp / XP_REQUIRED_TO_LEVELUP;
    let new_xp = character.strength_xp % XP_REQUIRED_TO_LEVELUP;

    character.strength_xp = new_xp;
    character.stats.strength_level += levels_upgraded;

    let mut messages: Vec<String> = Vec::with_capacity(3);
    let first_message = match character.stats.strength_level - levels_upgraded {
        0..=2 => format!("voc√™ fez alguns exerc√≠cios leves e recebeu **{xp} XP** em for√ßa!"),
        3..=6 => format!("voc√™ fez v√°rios exerc√≠cios leves e recebeu **{xp} XP** em for√ßa!"),
        7..=10 => format!("voc√™ se dedicou a treinos moderados e ganhou **{xp} XP** em for√ßa!"),
        11..=15 => format!("voc√™ intensificou seus treinos e ganhou **{xp} XP** em for√ßa!"),
        16..=20 => format!("voc√™ se dedicou a levantamento de peso e ganhou **{xp} XP** em for√ßa!"),
        21..=30 => format!("voc√™ se tornou uma verdadeira for√ßa da natureza e ganhou **{xp} XP** em for√ßa!"),
        31..=40 => format!("seu poder √© lend√°rio entre os guerreiros e ganhou **{xp} XP** em for√ßa!"),
        41..=50 => format!("sua for√ßa √© compar√°vel a de um tit√£ e ganhou **{xp} XP** em for√ßa!"),
        51..=60 => format!("voc√™ √© uma verdadeira for√ßa inabal√°vel e ganhou **{xp} XP** em for√ßa!"),
        61..=70 => format!("voc√™ transcendeu os limites da for√ßa mortal e ganhou **{xp} XP** em for√ßa!"),
        71..=80 => format!("voc√™ alcan√ßou um n√≠vel divino de for√ßa e ganhou **{xp} XP** em for√ßa!"),
        _ => format!("voc√™ se tornou uma lenda viva, uma verdadeira for√ßa da natureza, e ganhou **{xp} XP** em for√ßa!"),
    };

    messages.push(first_message);

    if levels_upgraded > 0 {
        let levelup_message = match character.stats.strength_level {
            0..=2 => "Voc√™ sentiu que seus m√∫sculos est√£o mais r√≠gidos e fortes. Sua for√ßa aumentou!",
            3..=6 => "Voc√™ notou que seu corpo est√° maior e mais resistente. Sua for√ßa aumentou!",
            7..=10 => "O que antes era pesado agora est√° mais leve para voc√™. Sua for√ßa aumentou!",
            11..=15 => "Sua capacidade f√≠sica agora est√° muito al√©m do que voc√™ podia prever no passado. Sua for√ßa aumentou!",
            16..=20 => "Seus m√∫sculos se tornaram densos como pedra. Sua for√ßa aumentou!",
            21..=30 => "Voc√™ se tornou uma verdadeira for√ßa da natureza. Sua for√ßa aumentou!",
            31..=40 => "Seus m√∫sculos s√£o como montanhas intranspon√≠veis. Sua for√ßa aumentou!",
            41..=50 => "Sua for√ßa √© compar√°vel √† dos lend√°rios her√≥is da mitologia. Sua for√ßa aumentou!",
            51..=60 => "Voc√™ alcan√ßou um n√≠vel de for√ßa que poucos podem igualar. Sua for√ßa aumentou!",
            61..=70 => "Voc√™ transcendeu os limites da for√ßa mortal. Sua for√ßa aumentou!",
            71..=80 => "Seu poder rivaliza com os maiores guerreiros da hist√≥ria. Sua for√ßa aumentou!",
            _ => "A sua for√ßa √© t√£o grande que sua mera presen√ßa inspira respeito e temor. Sua for√ßa aumentou!"
        };

        messages.push(levelup_message.to_string());
    }

    ctx.db().characters().save(character).await?;

    ctx.send(Response::new_user_reply(&author, messages.join("\n")))
        .await?;

    Ok(())
}

pub async fn health_training(
    mut ctx: CommandContext,
    mut character: CharacterModel,
) -> anyhow::Result<()> {
    let author = ctx.author().await?;
    let xp = random_xp_amount(character.stats.health_level);
    character.health_xp += xp;

    let levels_upgraded = character.health_xp / XP_REQUIRED_TO_LEVELUP;
    let new_xp = character.health_xp % XP_REQUIRED_TO_LEVELUP;

    character.health_xp = new_xp;
    character.stats.health_level += levels_upgraded;
    character.stats.resistance.max += (levels_upgraded * 9) as i32;
    character.stats.resistance.value += (levels_upgraded * 9) as i32;

    character.stats.vitality.max += (levels_upgraded * 12) as i32;
    character.stats.vitality.value += (levels_upgraded * 12) as i32;

    let mut messages: Vec<String> = Vec::with_capacity(3);
    let first_message = match character.stats.health_level - levels_upgraded {
        0..=2 => format!("voc√™ fez alguns exerc√≠cios leves e recebeu **{xp} XP** em vida!"),
        3..=5 => format!("voc√™ fez v√°rios exerc√≠cios leves e recebeu **{xp} XP** em vida!"),
        6..=8 => format!("voc√™ praticou yoga e medita√ß√£o, ganhando **{xp} XP** em sa√∫de!"),
        9..=11 => format!("voc√™ correu maratonas, melhorando sua resist√™ncia e ganhando **{xp} XP** em vida!"),
        12..=15 => format!("voc√™ fez uma rotina intensa de cardio e ganhou **{xp} XP** em sa√∫de!"),
        16..=18 => format!("voc√™ levantou pesos pesados, fortalecendo seus m√∫sculos e ganhando **{xp} XP** em vida!"),
        19..=22 => format!("voc√™ treinou intensamente, ganhando **{xp} XP** em sa√∫de!"),
        23..=26 => format!("voc√™ fez um treino de resist√™ncia incr√≠vel, aumentando sua for√ßa e ganhando **{xp} XP** em vida!"),
        27..=30 => format!("voc√™ superou seus limites e fez um treino extremamente intenso, ganhando **{xp} XP** em sa√∫de!"),
        31..=35 => format!("voc√™ alcan√ßou um novo patamar de condicionamento f√≠sico, ganhando **{xp} XP** em vida!"),
        36..=40 => format!("seu treinamento excepcional elevou sua sa√∫de para novas alturas, concedendo **{xp} XP**!"),
        41..=45 => format!("voc√™ se tornou uma m√°quina de exerc√≠cios, ganhando **{xp} XP** em vida!"),
        46..=50 => format!("sua dedica√ß√£o aos treinos √© incompar√°vel, ganhando **{xp} XP** em sa√∫de!"),
        51..=60 => format!("voc√™ √© um verdadeiro atleta, ganhando **{xp} XP** em vida por cada treino!"),
        61..=70 => format!("seu comprometimento com a sa√∫de √© inspirador, ganhando **{xp} XP** em sa√∫de a cada esfor√ßo!"),
        71..=80 => format!("voc√™ transcendeu os limites do corpo humano, ganhando **{xp} XP** em vida por cada movimento!"),
        81..=90 => format!("voc√™ √© uma for√ßa da natureza, ganhando **{xp} XP** em sa√∫de por cada respira√ß√£o!"),
        91..=100 => format!("seu dom√≠nio sobre o corpo √© lend√°rio, ganhando **{xp} XP** em vida por cada desafio superado!"),
        _ => format!("voc√™ alcan√ßou um estado de perfei√ß√£o f√≠sica, ganhando **{xp} XP** em sa√∫de por cada a√ß√£o!")
    };

    messages.push(first_message);

    if levels_upgraded > 0 {
        let levelup_message = match character.stats.health_level {
            0..=2 => {
                "Voc√™ sentiu que seu corpo n√£o est√° t√£o fr√°gil quanto antes. Sua vida aumentou!"
            }
            3..=6 => "Voc√™ notou que seu corpo agora √© mais resistente. Sua vida aumentou!",
            7..=10 => {
                "O que antes te feria muito agora causa apenas ferimentos leves. Sua vida aumentou!"
            }
            11..=15 => {
                "Sua resist√™ncia ultrapassou suas expectativas anteriores. Sua vida aumentou!"
            }
            16..=20 => "Voc√™ se tornou mais robusto e resistente a danos. Sua vida aumentou!",
            21..=30 => "Agora precisa de muita for√ßa para te parar. Sua vida aumentou!",
            31..=40 => "Voc√™ se tornou uma muralha de resist√™ncia. Sua vida aumentou!",
            41..=50 => "Seu corpo se transformou em uma fortaleza inabal√°vel. Sua vida aumentou!",
            51..=60 => "Voc√™ √© uma verdadeira fortaleza ambulante. Sua vida aumentou!",
            61..=70 => "Sua resist√™ncia √© lend√°ria entre os guerreiros. Sua vida aumentou!",
            71..=80 => "Os deuses invejam sua durabilidade. Sua vida aumentou!",
            81..=90 => "Voc√™ transcendeu os limites da mortalidade. Sua vida aumentou!",
            91..=100 => {
                "Voc√™ atingiu um n√≠vel quase inating√≠vel de resist√™ncia. Sua vida aumentou!"
            }
            _ => "Sua resist√™ncia √© t√£o grande que desafia at√© os deuses. Sua vida aumentou!",
        };

        messages.push(levelup_message.to_string());
    }

    ctx.db().characters().save(character).await?;

    ctx.send(Response::new_user_reply(&author, messages.join("\n")))
        .await?;

    Ok(())
}
